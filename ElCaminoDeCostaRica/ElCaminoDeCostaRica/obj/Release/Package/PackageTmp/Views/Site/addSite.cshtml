@model ElCaminoDeCostaRica.Models.Site
@{
    List<SelectListItem> users = new List<SelectListItem>();
    List<SelectListItem> stages = new List<SelectListItem>();
    foreach (var user in ViewBag.Users)
    {
        users.Add(
        new SelectListItem { Text = Convert.ToString(user.email), Value = Convert.ToString(user.id) }
        );
    }

    foreach (var stage in ViewBag.Stages)
    {
        stages.Add(
        new SelectListItem { Text = Convert.ToString(stage.id), Value = Convert.ToString(stage.id) }
        );
    }
}
<html>
<head>
</head>
<body class="body_CategoryAdd">

    @if (ViewBag.Message != null)
    {
        if (ViewBag.Success)
        {
            <div class="alert-success">
                <h3> @ViewBag.Message </h3>
            </div>
        }
        else
        {
            <div class="alert-danger">
                <h3> @ViewBag.Message </h3>
            </div>
        }
    }

    @{

        using (Html.BeginForm("addSite", "Site", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <h1 class="formTitle">Crear sitio</h1>


            <div class="form-style-9" ; style="color:black">
                @Html.LabelFor(model => model.name)
                @Html.TextBoxFor(model => model.name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>

            <div class="form-style-9" ; style="color:black">
                @Html.LabelFor(model => model.description)
                @Html.TextBoxFor(model => model.description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.longitude, new { @class = "formLabel" })
                @Html.TextBoxFor(model => model.longitude, new { @class = "formcontrol, formInput" })
                @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.latitude, new { @class = "formLabel" })
                @Html.TextBoxFor(model => model.latitude, new { @class = "formcontrol, formInput" })
                @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
            </div>

            <div class="form-style-9" ; style="color:black">
                @Html.LabelFor(model => model.idUser)
                @Html.DropDownListFor(model => model.idUser, users, "-Sin selección - ", new { @class = "form - control" })
                @Html.ValidationMessageFor(model => model.idUser, "", new { @class = "text-danger" })


            </div>

            <div class="form-style-9" ; style="color:black">
                @Html.LabelFor(model => model.idStage)
                @Html.DropDownListFor(model => model.idStage, stages, "-Sin selección - ", new { @class = "form - control" })
                @Html.ValidationMessageFor(model => model.idStage, "", new { @class = "text-danger" })


            </div>

            <div>
                <input type="submit" class="btn btn-success btnCreate" value="Crear" />
            </div>



        }
    }
</body>
@section Scripts { @Scripts.Render("~/bundles/jqueryval") }
</html>
