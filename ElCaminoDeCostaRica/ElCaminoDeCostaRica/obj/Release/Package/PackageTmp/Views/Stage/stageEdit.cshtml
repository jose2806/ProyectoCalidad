@model ElCaminoDeCostaRica.Models.Stage
@{ 
    List<SelectListItem> routes = new List<SelectListItem>();
    foreach (var route in ViewBag.Data)
    {
        routes.Add(
        new SelectListItem { Text = Convert.ToString(route.id), Value = Convert.ToString(route.id) }
        );
    } }
  
<html>
<head>
</head>
<body>
    <div class="container_Rose formTitleCenter">
        @using (Html.BeginForm("stageEdit", "Stage", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            @Html.AntiForgeryToken()
            <h1>Formulario de edicion de etapa</h1>
            <div class="form-horizontal">
                @Html.HiddenFor(model => model.id)

                <div class="form-group">
                    @Html.LabelFor(model => model.start, new { @class = "formLabel" })
                    @Html.TextBoxFor(model => model.start, new { @class = "form-control, formInput" })
                    @Html.ValidationMessageFor(model => model.start, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.finish, new { @class = "formLabel" })
                    @Html.TextBoxFor(model => model.finish, new { @class = "formcontrol, formInput" })
                    @Html.ValidationMessageFor(model => model.finish, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.distance, new { @class = "formLabel" })
                    @Html.TextBoxFor(model => model.distance, new { @class = "formcontrol, formInput" })
                    @Html.ValidationMessageFor(model => model.distance, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.minAltimetry, new { @class = "formLabel" })
                    @Html.TextBoxFor(model => model.minAltimetry, new { @class = "formcontrol, formInput" })
                    @Html.ValidationMessageFor(model => model.minAltimetry, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.maxAltimetry, new { @class = "formLabel" })
                    @Html.TextBoxFor(model => model.maxAltimetry, new { @class = "formcontrol, formInput" })
                    @Html.ValidationMessageFor(model => model.maxAltimetry, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.idRoute, new { @class = "formLabel" })
                    @Html.DropDownListFor(model => model.idRoute, routes, "-Sin selección - ", new { @class = "form - control" })
                    @Html.ValidationMessageFor(model => model.idRoute, "", new { @class = "text-danger" })
                </div>

                <div>
                    <input type="submit" class="btn btn-success" value="Aplicar cambios" />
                </div>
            </div>
        }
    </div>
</body>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
</html>
