@model ElCaminoDeCostaRica.Models.Service
@{
    List<SelectListItem> suppliers = new List<SelectListItem>();
    List<SelectListItem> categories = new List<SelectListItem>();
    List<SelectListItem> stages = new List<SelectListItem>();
    foreach (var supplier in ViewBag.Suppliers)
    {
        suppliers.Add(
        new SelectListItem { Text = Convert.ToString(supplier.name), Value = Convert.ToString(supplier.id) }
        );
    }
    foreach (var category in ViewBag.Categories)
    {
        categories.Add(
        new SelectListItem { Text = Convert.ToString(category.name), Value = Convert.ToString(category.id) }
        );
    }
    foreach (var stage in ViewBag.Stages)
    {
        stages.Add(
        new SelectListItem { Text = Convert.ToString(stage.id), Value = Convert.ToString(stage.id) }
        );
    }
}
<html>
<head>
</head>
<body class="body_CategoryAdd">
    <div class="container_Green formTitleCenter">
        @{

            using (Html.BeginForm("addService", "Service", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <h1 class="formTitle" style="text-align:center">Crear servicio</h1>


                <div class="form-style-9" ; style="color:black">
                    @Html.LabelFor(model => model.name, new { @class = "formLabel" })
                    @Html.TextBoxFor(model => model.name, new { @class = "form-control, formInput" })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>

                <div class="form-style-9" ; style="color:black">
                    @Html.LabelFor(model => model.description, new { @class = "formLabel" })
                    @Html.TextBoxFor(model => model.description, new { @class = "form-control, formInput" })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })


                </div>

                <div class="form-style-9" ; style="color:black">
                    @Html.LabelFor(model => model.idCategory, new { @class = "formLabel" })
                    @Html.DropDownListFor(model => model.idCategory, categories, "-Sin selección - ", new { @class = "form - control" })
                    @Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger" })


                </div>

                <div class="form-style-9" ; style="color:black">
                    @Html.LabelFor(model => model.idSupplier, new { @class = "formLabel" })
                    @Html.DropDownListFor(model => model.idSupplier, suppliers, "-Sin selección - ", new { @class = "form - control" })
                    @Html.ValidationMessageFor(model => model.idSupplier, "", new { @class = "text-danger" })


                </div>

                <div class="form-style-9" ; style="color:black">
                    @Html.LabelFor(model => model.idStage, new { @class = "formLabel" })
                    @Html.DropDownListFor(model => model.idStage, stages, "-Sin selección - ", new { @class = "form - control" })
                    @Html.ValidationMessageFor(model => model.idStage, "", new { @class = "text-danger" })


                </div>

                <div>
                    <input type="submit" class="btn btn-success btnCreate" value="Crear" />
                </div>

                if (ViewBag.Message != null)
                {
                    if (ViewBag.Success)
                    {
                        <div class="alert-success">
                            <h3> @ViewBag.Message </h3>
                        </div>
                    }
                    else
                    {
                        <div class="alert-danger">
                            <h3> @ViewBag.Message </h3>
                        </div>
                    }
                }
            }
        }
    </div>
</body>
@section Scripts { @Scripts.Render("~/bundles/jqueryval") }
</html>
