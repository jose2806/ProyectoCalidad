@model ElCaminoDeCostaRica.Models.Picture
@{
    List<SelectListItem> sites = new List<SelectListItem>();
    List<SelectListItem> stages = new List<SelectListItem>();
    foreach (var site in ViewBag.Sites)
    {
        sites.Add(
        new SelectListItem { Text = Convert.ToString(site.name), Value = Convert.ToString(site.id) }
        );
    }

    foreach (var stage in ViewBag.Stages)
    {
        stages.Add(
        new SelectListItem { Text = Convert.ToString(stage.id), Value = Convert.ToString(stage.id) }
        );
    }
}
<html>
<head>
</head>
<body class="body_Index">
    @if (ViewBag.Message != null)
    {
        if (ViewBag.Success)
        {
            <div class="alert-success">
                <h3> @ViewBag.Message </h3>
            </div>
        }
        else
        {
            <div class="alert-danger">
                <h3> @ViewBag.Message </h3>
            </div>
        }
    }

    @using (Html.BeginForm("addPicture", "Picture", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <h1 class="formTitle">Agregar Foto</h1>
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.picture, new { @class = "formLabel" })
                @Html.TextBoxFor(model => model.picture, new { @class = "form-control, formInput" })
                @Html.ValidationMessageFor(model => model.picture, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.caption, new { @class = "formLabel" })
                @Html.TextBoxFor(model => model.caption, new { @class = "formcontrol, formInput" })
                @Html.ValidationMessageFor(model => model.caption, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.idSite, new { @class = "formLabel" })
                @Html.DropDownListFor(model => model.idSite, sites, "-Sin selección - ", new { @class = "form - control" })
                @Html.ValidationMessageFor(model => model.idSite, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.idStage, new { @class = "formLabel" })
                @Html.DropDownListFor(model => model.idStage, stages, "-Sin selección - ", new { @class = "form - control" })
                @Html.ValidationMessageFor(model => model.idStage, "", new { @class = "text-danger" })
            </div>

        </div>
        <div>

            <input type="submit" class="btn btn-success btnCreate" value="Agregar" />
        </div>
    }
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
</html>
